name: Run Translator

on:
    workflow_dispatch:
      inputs:
        text:
          description: 'Text to translate'
          required: true
          default: 'Hello, how are you?'
    issue_comment:
      types: [created]

jobs:
  run-translator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Parse issue body to env
        if: github.event_name == 'issue_comment'
        run: |
          echo "${{ github.event.issue.body }}" | python parse_issue.py
          echo "SOURCE_LANG=$SOURCE_LANG"  # Debugging line to print SOURCE_LANG
          echo "TARGET_LANG=$TARGET_LANG"  # Debugging line to print TARGET_LANG
          
      - name: Run main.py
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            # Extract comment body and issue title using GitHub CLI
            gh api repos/${{ github.repository }}/issues/${{ github.event.issue.number }} | jq -r '.title' > issue_title.txt
            gh api repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }} | jq -r '.body' > comment_body.txt
            issue_title=$(cat issue_title.txt)
            comment_body=$(cat comment_body.txt)
            # Only run if issue title matches translation template
            if [[ "$issue_title" == Translation:* ]]; then
              python main.py "$comment_body"
              # Update the comment with the original prompt and translation
              original_text="$comment_body"
              translation_output=$(python main.py "$comment_body")
              new_comment_body="**Original:** $original_text

              **Translation:** $translation_output"
              gh api repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }} -X PATCH --field body="$new_comment_body"
            fi
          else
            python main.py "${{ github.event.inputs.text }}"
          fi
